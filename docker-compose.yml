cat docker-compose.yml
version: '3.8' # O una versión reciente que soporte las características usadas

services:
  # --- Servicio Único de la Aplicación ---
  app: # El único servicio que corre toda la aplicación
    build:
      context: . # Busca el Dockerfile en el directorio actual
      # dockerfile: Dockerfile # Puedes especificar un nombre si no es 'Dockerfile'
    container_name: checktime-app-unica # Nombre descriptivo para el contenedor único
    restart: unless-stopped # Política de reinicio: siempre reiniciar a menos que se detenga manualmente
    ports:
      # Mapea el puerto 5000 del host al puerto 5000 del contenedor (donde escucha Flask)
      - "5000:5000"
    volumes:
      # Monta directorios/archivos locales dentro del contenedor para persistencia y configuración
      # Es crucial que las rutas internas coincidan con lo que esperan tus scripts y supervisor
      - ./db:/data          # Directorio local 'db' mapeado a '/data' dentro del contenedor (para SQLite)
      - ./config:/app/config # Directorio local 'config' mapeado a '/app/config' (para configuración)
      - ./logs:/app/logs     # Directorio local 'logs' mapeado a '/app/logs' (para logs)
      # Nota: No se monta './:/app' para evitar sobreescribir el código copiado en la imagen
    env_file:
      - .env # Carga variables de entorno desde el archivo .env del directorio actual
             # Asegúrate que este archivo .env define TODAS las variables necesarias, incluyendo:
             # CHECKJC_USERNAME, CHECKJC_PASSWORD, TELEGRAM_BOT_TOKEN,
             # TELEGRAM_CHAT_ID, FLASK_SECRET_KEY, ADMIN_PASSWORD,
             # DATABASE_URL=sqlite:////data/checktime.db  <-- ¡Importante la ruta /data!
             # PORT=5000
             # TZ=Europe/Madrid
             # PYTHONPATH=/app (Aunque esto también se puede definir en Dockerfile/supervisor)
    shm_size: '2gb' # Asigna 2GB de memoria compartida
