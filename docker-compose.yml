version: '3'

services:
  db:
    image: postgres:15-alpine
    container_name: checktime-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=checktime
    volumes:
      - postgres_data:/var/lib/postgresql/
    ports:
      - "5432:5432" 
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  db-init:
    build: .
    container_name: checktime-db-init
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    command: python -m src.checktime.shared.db_init
    restart: "no"

  web:
    build: .
    container_name: checktime-web
    depends_on:
      db-init:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./config:/app/config
      - /var/log/checktime:/var/log/checktime
    ports:
      - "5001:5000"
    command: python -m src.checktime.web.server
    restart: unless-stopped

  bot:
    build: .
    container_name: checktime-bot
    depends_on:
      db-init:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./config:/app/config
      - /var/log/checktime:/var/log/checktime
    command: python -m src.checktime.bot.listener
    restart: unless-stopped

  scheduler:
    build: .
    container_name: checktime-scheduler
    depends_on:
      db-init:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - SIMULATION_MODE=false
    volumes:
      - ./config:/app/config
      - /var/log/checktime:/var/log/checktime
    command: python -m src.checktime.scheduler.service
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local 